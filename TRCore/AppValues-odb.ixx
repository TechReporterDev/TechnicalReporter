// This file was generated by ODB, object-relational mapping (ORM)
// compiler for C++.
//

namespace odb
{
}

namespace odb
{
  // PeriodicReloadIdentity
  //

  inline
  bool access::composite_value_traits< ::TR::Core::PeriodicReloadIdentity, id_mysql >::
  get_null (const image_type& i)
  {
    bool r (true);
    r = r && composite_value_traits< ::TR::Core::ReportTypeUUID, id_mysql >::get_null (i.m_report_type_uuid_value);
    return r;
  }

  inline
  void access::composite_value_traits< ::TR::Core::PeriodicReloadIdentity, id_mysql >::
  set_null (image_type& i,
            mysql::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace mysql;

    composite_value_traits< ::TR::Core::ReportTypeUUID, id_mysql >::set_null (i.m_report_type_uuid_value, sk);
  }

  // PeriodicLaunchIdentity
  //

  inline
  bool access::composite_value_traits< ::TR::Core::PeriodicLaunchIdentity, id_mysql >::
  get_null (const image_type& i)
  {
    bool r (true);
    r = r && i.m_action_shortcut_uuid_null;
    return r;
  }

  inline
  void access::composite_value_traits< ::TR::Core::PeriodicLaunchIdentity, id_mysql >::
  set_null (image_type& i,
            mysql::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace mysql;

    i.m_action_shortcut_uuid_null = 1;
  }

  // PeriodicOperationVariant
  //

  inline
  bool access::composite_value_traits< ::TR::Core::PeriodicOperationVariant, id_mysql >::
  get_null (const image_type& i)
  {
    bool r (true);
    r = r && composite_value_traits< ::TR::Core::PeriodicReloadIdentity, id_mysql >::get_null (i.m_value1_value);
    r = r && composite_value_traits< ::TR::Core::PeriodicLaunchIdentity, id_mysql >::get_null (i.m_value2_value);
    return r;
  }

  inline
  void access::composite_value_traits< ::TR::Core::PeriodicOperationVariant, id_mysql >::
  set_null (image_type& i,
            mysql::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace mysql;

    composite_value_traits< ::TR::Core::PeriodicReloadIdentity, id_mysql >::set_null (i.m_value1_value, sk);
    composite_value_traits< ::TR::Core::PeriodicLaunchIdentity, id_mysql >::set_null (i.m_value2_value, sk);
  }
}

